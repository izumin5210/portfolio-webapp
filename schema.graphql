type ArticleEntry {
  title: String!
  url: String!
}

union Entry = ArticleEntry | OSSEntry | PodcastEntry | SlideEntry

"""
A connection to a list of items.
"""
type EntryConnection {
  """
  A list of edges.
  """
  edges: [EntryEdge]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type EntryEdge {
  """
  A cursor for use in pagination
  """
  cursor: String!

  """
  The item at the end of the edge
  """
  node: Entry
}

type OSSEntry {
  title: String!
  url: String!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type PodcastEntry {
  title: String!
  url: String!
}

type Query {
  entries(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the last n items from the list.
    """
    last: Int
  ): EntryConnection!
}

type SlideEntry {
  title: String!
  url: String!
}
