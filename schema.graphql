type ArticleEntry {
  body: String!
  feedDescriptionHtml: String!
  path: String!
  picked: Boolean!
  publishedOn: Date!
  source: EntrySource!
  tags: [EntryTag!]!
  title: String!
  updatedOn: Date!
}

"""
A connection to a list of items.
"""
type ArticleEntryConnection {
  """
  A list of edges.
  """
  edges: [ArticleEntryEdge]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ArticleEntryEdge {
  """
  A cursor for use in pagination
  """
  cursor: String!

  """
  The item at the end of the edge
  """
  node: ArticleEntry
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

union Entry = ArticleEntry | ExternalArticleEntry | OSSEntry | PodcastEntry | SlideEntry

"""
A connection to a list of items.
"""
type EntryConnection {
  """
  A list of edges.
  """
  edges: [EntryEdge]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type EntryEdge {
  """
  A cursor for use in pagination
  """
  cursor: String!

  """
  The item at the end of the edge
  """
  node: Entry
}

type EntrySource {
  name: String!
}

type EntryTag {
  displayName: String!
  name: String!
}

type ExternalArticleEntry {
  picked: Boolean!
  publishedOn: Date!
  source: EntrySource!
  tags: [EntryTag!]!
  title: String!
  url: String!
}

type OSSEntry {
  picked: Boolean!
  publishedOn: Date!
  source: EntrySource!
  tags: [EntryTag!]!
  title: String!
  url: String!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type PodcastEntry {
  picked: Boolean!
  publishedOn: Date!
  source: EntrySource!
  tags: [EntryTag!]!
  title: String!
  url: String!
}

type Query {
  articleEntries(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the last n items from the list.
    """
    last: Int
  ): ArticleEntryConnection!
  articleEntryByPath(path: String!): ArticleEntry
  entries(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the last n items from the list.
    """
    last: Int
  ): EntryConnection!
  entriesByTags(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the last n items from the list.
    """
    last: Int
    tags: [String!]!
  ): EntryConnection!
  pickedEntries: [Entry!]!
}

type SlideEntry {
  picked: Boolean!
  publishedOn: Date!
  source: EntrySource!
  tags: [EntryTag!]!
  title: String!
  url: String!
}
