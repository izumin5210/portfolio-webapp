name: CI

on: [push]

jobs:
  ensure-git-status-clean:
    runs-on: ubuntu-latest
    name: Clean
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version-file: '.node-version'
        cache: 'yarn'
    - run: yarn --frozen-lockfile
    - run: yarn clean
    - run: yarn generate
    - run: yarn prettier --write src
    - name: Check there is no diff
      run: |
        if test -n "$(git status --porcelain)"; then
          git status
          git diff
          exit 1
        fi

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v2
      with:
        node-version-file: '.node-version'
        cache: 'yarn'
    - run: yarn --frozen-lockfile
    - run: yarn lint

  typecheck:
    runs-on: ubuntu-latest
    name: Typecheck
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version-file: '.node-version'
        cache: 'yarn'
    - run: yarn --frozen-lockfile
    - run: yarn typecheck

  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version-file: '.node-version'
        cache: 'yarn'
    - run: yarn --frozen-lockfile
    - run: yarn test --ci --coverage

  build:
    runs-on: ubuntu-latest
    name: Build
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ secrets.GOOGLE_COULD_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT }}
        access_token_lifetime: 600s
    - uses: 'google-github-actions/setup-gcloud@v0'
    - run: |
        gcloud auth configure-docker
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - run: ./scripts/decrypt-dotenv
      env:
        DOTENV_ENCRYPTION_SECRET: ${{ secrets.DOTENV_ENCRYPTION_SECRET }}
    - id: vars
      run: echo "::set-output name=git-sha::${GITHUB_SHA::7}"
    - uses: docker/build-push-action@v2
      with:
        push: true
        tags: gcr.io/izumin-portfolio/portfolio-webapp:${{ steps.vars.outputs.git-sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        build-args: |
          GIT_SHA=${{ steps.vars.outputs.git-sha }}
        secret-files: |
          dotenv=./.env
    - name: Upload assets
      run: |
        containerId=`docker create gcr.io/izumin-portfolio/portfolio-webapp:${{ steps.vars.outputs.git-sha }}`
        dotNext=${{ github.workspace }}/.next
        docker cp ${containerId}:/app/.next ${dotNext}
        gcloud components install alpha
        gcloud alpha storage cp ${dotNext}/static gs://izumin-portfolio-webapp-assets/${{ steps.vars.outputs.git-sha }}/_next/static
    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: [ensure-git-status-clean, lint, typecheck, test, build]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ secrets.GOOGLE_COULD_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT }}
        access_token_lifetime: 600s
    - uses: 'google-github-actions/deploy-cloudrun@v0'
      with:
        service: 'portfolio-webapp'
        image: 'gcr.io/izumin-portfolio/portfolio-webapp:${{ github.sha }}'
